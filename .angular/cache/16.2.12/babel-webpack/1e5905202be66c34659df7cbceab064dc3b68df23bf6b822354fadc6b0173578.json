{"ast":null,"code":"import { FormControl, FormGroup } from '@angular/forms';\nimport { DisplayBodyComponent } from '../display-body/display-body.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../display-body/display-body.component\";\nclass DisplayComponent {\n  constructor() {\n    this.display = new FormGroup({\n      temperature: new FormControl(),\n      minTemperature: new FormControl(),\n      maxTemperature: new FormControl()\n    });\n    this.display.valueChanges.subscribe(formValue => {\n      this.changeForm.changeValues();\n      console.log('MUDOU', formValue);\n      console.log('MUDOU', this.display.controls.temperature);\n    });\n  }\n  static #_ = this.ɵfac = function DisplayComponent_Factory(t) {\n    return new (t || DisplayComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DisplayComponent,\n    selectors: [[\"app-display\"]],\n    viewQuery: function DisplayComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(DisplayBodyComponent, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.changeForm = _t.first);\n      }\n    },\n    decls: 9,\n    vars: 4,\n    consts: [[1, \"container\"], [1, \"container-body-m\"], [3, \"temperature\", \"minTemperature\", \"maxTemperature\"], [3, \"formGroup\"], [\"type\", \"number\", \"formControlName\", \"temperature\"], [\"type\", \"number\", \"formControlName\", \"minTemperature\"], [\"type\", \"number\", \"formControlName\", \"maxTemperature\"]],\n    template: function DisplayComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n        i0.ɵɵelement(2, \"app-display-body\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"h2\");\n        i0.ɵɵtext(4, \"Type the temperatures\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"form\", 3);\n        i0.ɵɵelement(6, \"input\", 4)(7, \"input\", 5)(8, \"input\", 6);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"temperature\", ctx.display.controls.temperature.value)(\"minTemperature\", ctx.display.controls.minTemperature.value)(\"maxTemperature\", ctx.display.controls.maxTemperature.value);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"formGroup\", ctx.display);\n      }\n    },\n    dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i2.DisplayBodyComponent],\n    styles: [\".container-body-m[_ngcontent-%COMP%] {\\n  width: 50%;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZGlzcGxheS9kaXNwbGF5LmNvbXBvbmVudC5zYXNzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsVUFBQTtBQUNGIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbnRhaW5lci1ib2R5LW1cbiAgd2lkdGg6IDUwJVxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}\nexport { DisplayComponent };","map":{"version":3,"names":["FormControl","FormGroup","DisplayBodyComponent","DisplayComponent","constructor","display","temperature","minTemperature","maxTemperature","valueChanges","subscribe","formValue","changeForm","changeValues","console","log","controls","_","_2","selectors","viewQuery","DisplayComponent_Query","rf","ctx","i0","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵtext","ɵɵadvance","ɵɵproperty","value"],"sources":["/Users/leonardonogatz/Documents/Leos/temperature/temperature/src/app/display/display.component.ts","/Users/leonardonogatz/Documents/Leos/temperature/temperature/src/app/display/display.component.html"],"sourcesContent":["import { Component, ViewChild } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { DisplayBodyComponent } from '../display-body/display-body.component';\n\ninterface TemperatureDisplay {\n  temperature: FormControl<number>;\n  minTemperature: FormControl<number>;\n  maxTemperature: FormControl<number>\n}\n\n@Component({\n  selector: 'app-display',\n  templateUrl: './display.component.html',\n  styleUrls: ['./display.component.sass']\n})\nexport class DisplayComponent {\n  @ViewChild(DisplayBodyComponent) changeForm!: DisplayBodyComponent;\n  display: FormGroup<TemperatureDisplay> = new FormGroup<TemperatureDisplay>({\n    temperature: new FormControl(),\n    minTemperature: new FormControl(),\n    maxTemperature: new FormControl(),\n  });\n\n  constructor(){\n    this.display.valueChanges.subscribe((formValue) => {\n      this.changeForm.changeValues();\n      console.log('MUDOU', formValue);\n      console.log('MUDOU', this.display.controls.temperature);\n    })\n  }\n\n\n\n}\n","<div class=\"container\">\n  <div class=\"container-body-m\">\n    <app-display-body\n    [temperature]=\"this.display.controls.temperature.value\"\n    [minTemperature]=\"this.display.controls.minTemperature.value\"\n    [maxTemperature]=\"this.display.controls.maxTemperature.value\"\n    > </app-display-body>\n  </div>\n  <h2>Type the temperatures</h2>\n  <form [formGroup]=\"display\">\n    <input type=\"number\" formControlName=\"temperature\" />\n    <input type=\"number\" formControlName=\"minTemperature\" />\n    <input type=\"number\" formControlName=\"maxTemperature\" />\n  </form>\n</div>\n"],"mappings":"AACA,SAASA,WAAW,EAAEC,SAAS,QAAQ,gBAAgB;AACvD,SAASC,oBAAoB,QAAQ,wCAAwC;;;;AAQ7E,MAKaC,gBAAgB;EAQ3BC,YAAA;IANA,KAAAC,OAAO,GAAkC,IAAIJ,SAAS,CAAqB;MACzEK,WAAW,EAAE,IAAIN,WAAW,EAAE;MAC9BO,cAAc,EAAE,IAAIP,WAAW,EAAE;MACjCQ,cAAc,EAAE,IAAIR,WAAW;KAChC,CAAC;IAGA,IAAI,CAACK,OAAO,CAACI,YAAY,CAACC,SAAS,CAAEC,SAAS,IAAI;MAChD,IAAI,CAACC,UAAU,CAACC,YAAY,EAAE;MAC9BC,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEJ,SAAS,CAAC;MAC/BG,OAAO,CAACC,GAAG,CAAC,OAAO,EAAE,IAAI,CAACV,OAAO,CAACW,QAAQ,CAACV,WAAW,CAAC;IACzD,CAAC,CAAC;EACJ;EAAC,QAAAW,CAAA,G;qBAdUd,gBAAgB;EAAA;EAAA,QAAAe,EAAA,G;UAAhBf,gBAAgB;IAAAgB,SAAA;IAAAC,SAAA,WAAAC,uBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;uBAChBpB,oBAAoB;;;;;;;;;;;;QChBjCsB,EAAA,CAAAC,cAAA,aAAuB;QAEnBD,EAAA,CAAAE,SAAA,0BAIqB;QACvBF,EAAA,CAAAG,YAAA,EAAM;QACNH,EAAA,CAAAC,cAAA,SAAI;QAAAD,EAAA,CAAAI,MAAA,4BAAqB;QAAAJ,EAAA,CAAAG,YAAA,EAAK;QAC9BH,EAAA,CAAAC,cAAA,cAA4B;QAC1BD,EAAA,CAAAE,SAAA,eAAqD;QAGvDF,EAAA,CAAAG,YAAA,EAAO;;;QAVLH,EAAA,CAAAK,SAAA,GAAuD;QAAvDL,EAAA,CAAAM,UAAA,gBAAAP,GAAA,CAAAlB,OAAA,CAAAW,QAAA,CAAAV,WAAA,CAAAyB,KAAA,CAAuD,mBAAAR,GAAA,CAAAlB,OAAA,CAAAW,QAAA,CAAAT,cAAA,CAAAwB,KAAA,oBAAAR,GAAA,CAAAlB,OAAA,CAAAW,QAAA,CAAAR,cAAA,CAAAuB,KAAA;QAMnDP,EAAA,CAAAK,SAAA,GAAqB;QAArBL,EAAA,CAAAM,UAAA,cAAAP,GAAA,CAAAlB,OAAA,CAAqB;;;;;;;SDMhBF,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}