{"ast":null,"code":"import { FormControl, FormGroup } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../display-body/display-body.component\";\nclass DisplayComponent {\n  constructor() {\n    this.display = new FormGroup({\n      temperature: new FormControl(),\n      minTemperature: new FormControl(0),\n      maxTemperature: new FormControl(0)\n    });\n    this.display.valueChanges.subscribe(formValue => {\n      console.log('MUDOU');\n    });\n  }\n  static #_ = this.ɵfac = function DisplayComponent_Factory(t) {\n    return new (t || DisplayComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DisplayComponent,\n    selectors: [[\"app-display\"]],\n    decls: 9,\n    vars: 0,\n    consts: [[1, \"container\"], [1, \"container-body-m\"], [\"action\", \"\"], [\"type\", \"number\", \"formControlName\", \"temperature\"], [\"type\", \"number\", \"formControlName\", \"minTemperature\"], [\"type\", \"number\", \"formControlName\", \"maxTemperature\"]],\n    template: function DisplayComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n        i0.ɵɵelement(2, \"app-display-body\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"h2\");\n        i0.ɵɵtext(4, \"Type the temperatures\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"form\", 2);\n        i0.ɵɵelement(6, \"input\", 3)(7, \"input\", 4)(8, \"input\", 5);\n        i0.ɵɵelementEnd()();\n      }\n    },\n    dependencies: [i1.DisplayBodyComponent],\n    styles: [\".container-body-m[_ngcontent-%COMP%] {\\n  width: 50%;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZGlzcGxheS9kaXNwbGF5LmNvbXBvbmVudC5zYXNzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsVUFBQTtBQUNGIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbnRhaW5lci1ib2R5LW1cbiAgd2lkdGg6IDUwJVxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}\nexport { DisplayComponent };","map":{"version":3,"names":["FormControl","FormGroup","DisplayComponent","constructor","display","temperature","minTemperature","maxTemperature","valueChanges","subscribe","formValue","console","log","_","_2","selectors","decls","vars","consts","template","DisplayComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵtext"],"sources":["/Users/leonardonogatz/Documents/Leos/temperature/temperature/src/app/display/display.component.ts","/Users/leonardonogatz/Documents/Leos/temperature/temperature/src/app/display/display.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\n\ninterface TemperatureDisplay {\n  temperature: FormControl<number | null>;\n  minTemperature: FormControl<number | null>;\n  maxTemperature: FormControl<number | null>\n}\n\n@Component({\n  selector: 'app-display',\n  templateUrl: './display.component.html',\n  styleUrls: ['./display.component.sass']\n})\nexport class DisplayComponent {\n  display: FormGroup<TemperatureDisplay> = new FormGroup<TemperatureDisplay>({\n    temperature: new FormControl(),\n    minTemperature: new FormControl(0),\n    maxTemperature: new FormControl(0),\n  });\n\n  constructor(){\n    this.display.valueChanges.subscribe((formValue) => {\n      console.log('MUDOU')\n    })\n  }\n\n\n\n}\n","<div class=\"container\">\n  <div class=\"container-body-m\">\n    <app-display-body> </app-display-body>\n  </div>\n  <h2>Type the temperatures</h2>\n  <form action=\"\">\n    <input type=\"number\" formControlName=\"temperature\" />\n    <input type=\"number\" formControlName=\"minTemperature\" />\n    <input type=\"number\" formControlName=\"maxTemperature\" />\n  </form>\n</div>\n"],"mappings":"AACA,SAASA,WAAW,EAAEC,SAAS,QAAQ,gBAAgB;;;AAQvD,MAKaC,gBAAgB;EAO3BC,YAAA;IANA,KAAAC,OAAO,GAAkC,IAAIH,SAAS,CAAqB;MACzEI,WAAW,EAAE,IAAIL,WAAW,EAAE;MAC9BM,cAAc,EAAE,IAAIN,WAAW,CAAC,CAAC,CAAC;MAClCO,cAAc,EAAE,IAAIP,WAAW,CAAC,CAAC;KAClC,CAAC;IAGA,IAAI,CAACI,OAAO,CAACI,YAAY,CAACC,SAAS,CAAEC,SAAS,IAAI;MAChDC,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;IACtB,CAAC,CAAC;EACJ;EAAC,QAAAC,CAAA,G;qBAXUX,gBAAgB;EAAA;EAAA,QAAAY,EAAA,G;UAAhBZ,gBAAgB;IAAAa,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,0BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCd7BE,EAAA,CAAAC,cAAA,aAAuB;QAEnBD,EAAA,CAAAE,SAAA,uBAAsC;QACxCF,EAAA,CAAAG,YAAA,EAAM;QACNH,EAAA,CAAAC,cAAA,SAAI;QAAAD,EAAA,CAAAI,MAAA,4BAAqB;QAAAJ,EAAA,CAAAG,YAAA,EAAK;QAC9BH,EAAA,CAAAC,cAAA,cAAgB;QACdD,EAAA,CAAAE,SAAA,eAAqD;QAGvDF,EAAA,CAAAG,YAAA,EAAO;;;;;;;SDKIxB,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}